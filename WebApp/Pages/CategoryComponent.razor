@page "/Categories"
@inject UseCase.IViewCategory ViewCategory
@inject UseCase.IDeleteCategory DeleteCategory
@inject NavigationManager NavigationManager
<h3>Categories</h3>

@if (categories != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>
                        @category.CategoryName
                    </td>
                    <td>
                        @category.CategoryDescription
                    </td>
                    <td>
                        <button type="button" @onclick="@( () => EditCategory(category))" class="btn btn-light">Update Category</button>
                        <button type="button" @onclick="@( () => RemoveCategory(category.CategoryId))" class="btn btn-light">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<br/> <button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Add Category</button>

@code {
    private List<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategory();

    }
    private void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/AddCategory");
    }
    private void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/EditCategory/{category.CategoryId}");
    }
    private void RemoveCategory(int categoryId)
    {
        DeleteCategory.Delete(categoryId);
        LoadCategory();
    }
    private void LoadCategory()
    {
        categories = ViewCategory.Execute()?.ToList();
    }
}
