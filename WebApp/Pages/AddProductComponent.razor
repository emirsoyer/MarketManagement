@page "/AddProducts"

@inject NavigationManager NavigationManager
@inject UseCase.IAddProduct AddProduct
@inject UseCase.IViewCategory ViewCategory
<h3>Add  Product</h3>

@if (product != null)
{
<EditForm Model="product" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="category">
            Category
        </label>
        <select id="category" @bind="product.CategoryId" class="form-control">
            <option selected></option>
            @foreach (var cat in categories)
            {
                <option value="@cat.CategoryId">@cat.CategoryName</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="name">
            Name
        </label>
        <InputText id="name" @bind-Value="product.ProductName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="price">
            Price
        </label>
        <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
    </div>
    <div class="form-group">
        <label for="quantity">
            Quantity
        </label>
        <InputNumber id="quantity" @bind-Value="product.Quantity" class="form-control"></InputNumber>
    </div>

    <button type="submit" class="btn btn-primary">Add Product</button>
    <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>

</EditForm>
}

@code
{
    private Product product;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        product = new Product();
        categories = ViewCategory.Execute();
    }

    private void OnValidSubmit()
    {
        AddProduct.Execute(product);
        NavigationManager.NavigateTo("/Products");

    }
    private void OnCancel()
    {
        NavigationManager.NavigateTo("/Products");
    }
}
